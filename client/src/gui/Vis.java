/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import Client.ClientTools;
import ForCity.City;

import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;

import static java.lang.Thread.sleep;

/**
 *
 * @author koshe
 */
public class Vis extends javax.swing.JFrame {
    private List<City> cc;
    private final ClientTools ct;
    private String username;
    private int cfp=30;
    private int currentcount=1;
    /**
     * Creates new form Vis
     */
    public Vis(List<City> cc, ClientTools ct, String username) {
        ImageIcon icon = new ImageIcon(getClass().getResource("icons8_city_block_40px.png"));
        this.setIconImage(icon.getImage());
        initComponents();
        jPanel1.setBackground(new Color(204, 166, 166));
        this.cc = cc;
        this.ct=ct;
        this.username=username;
        
        
        Runnable task = () -> {
            while (currentcount<cfp-1) {
                repaint();
                //System.out.println(currentcount);
                currentcount+=1;
                try {
                    sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Vis.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
        Thread t = new Thread(task);
        t.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        //System.out.println(evt.getX() + " " + evt.getY());
        for (City tmp:cc) {
            int x = (int) tmp.getCoordinates().getX();
            int y = (int) tmp.getCoordinates().getY();
            //System.out.println(x + " " + y);
            if (Math.abs(evt.getX() - x) <= 40 && Math.abs(evt.getY() - y) <= 40) {
                java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("gui/local"); // NOI18N
                //System.out.println("POIADASDFSADFSAFSAF");
                LocalDate date = tmp.getCreationDate();
                final DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd.MMMM uuuu", Locale.getDefault());
                String output = dtf.format(date);
                LocalDate date1 = tmp.getEstablishmentDate();
                String output1 = dtf.format(date1);
                
                String ans = bundle.getObject("Id") + ": " + tmp.getId() + "\n" +
                        bundle.getObject("Name") + ": " + tmp.getName() + "\n" +
                        bundle.getObject("Coordinate_X") + ": " + tmp.getCoordinates().getX() + "\n" +
                        bundle.getObject("Coordinate_Y") + ": " + tmp.getCoordinates().getY() + "\n" +
                        bundle.getObject("CreationDate") + ": " + output + "\n" +
                        bundle.getObject("Area") + ": " + tmp.getAreaSize() + "\n" +
                        bundle.getObject("Population") + ": " + tmp.getPopulation() + "\n" +
                        bundle.getObject("metersAboveSeaLevel") + ": " + tmp.getMetersAboveSeaLevel() + "\n" +
                        bundle.getObject("establishmentDate") + ": " + output1 + "\n" +
                        bundle.getObject("telephoneCode") + ": " + tmp.getTelephoneCode() + "\n" +
                        bundle.getObject("government") + ": " + tmp.getGovernment() + "\n" +
                        bundle.getObject("governor") + ": " + tmp.getGovernor().getHeight() + "\n" +
                        bundle.getObject("login") + ": " + tmp.getLogin() + "\n";
                JOptionPane.showMessageDialog(this, ans);
            }
        }
    }//GEN-LAST:event_jPanel1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing
    
    public static void tint(BufferedImage img, int color) {
        for (int x = 0; x < img.getWidth(); x++) {
            for (int y = 0; y < img.getHeight(); y++) {
                Color tmpc = new Color(img.getRGB(x, y));
                if (!tmpc.equals(new Color(0, 0, 0))) {
                    img.setRGB(x, y, color);
                }
            }
        }
    }

    public static BufferedImage toBufferedImage(Image img) {
        if (img instanceof BufferedImage) {
            return (BufferedImage) img;
        }

        // Create a buffered image with transparency
        BufferedImage bimage = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB);

        // Draw the image on to the buffered image
        Graphics2D bGr = bimage.createGraphics();
        bGr.drawImage(img, 0, 0, null);
        bGr.dispose();

        // Return the buffered image
        return bimage;
    }
    
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        Graphics2D g2D = (Graphics2D) g;
        Image icon = (new ImageIcon(getClass().getResource("icons8_city_40px_1.png"))).getImage();
        
        for (City tmp:cc){
            int color = tmp.getColor();
            BufferedImage bicon = toBufferedImage(icon);
            tint(bicon, color);
            //System.out.println(tmp.getCoordinates().getX());
            g2D.drawImage(bicon,  tmp.getCoordinates().getX()-10*(cfp-currentcount),  tmp.getCoordinates().getY()-10*(cfp-currentcount), null);
            //currentcount+=1;
        }
        //System.out.println("AAAAAAAAAAAAAAAAAA");
            
    }

    
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
